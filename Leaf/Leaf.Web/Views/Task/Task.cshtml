@using NonFactors.Mvc.Grid
@using Leaf.Web.Controllers
@using Leaf.Web.ViewModel
@model TaskViewModel
@{
    ViewData["Title"] = "Task";
}

<div>
    <div style="infoFrame">
        <h4>@Model.Task.IdProjNavigation.ClientNavigation.Nom</h4>
        <h4>Projet: @Model.Task.IdProjNavigation.Nom</h4>
    </div>
</div>

<div>
    <h3 class="subTitle">Tâche: @Model.TaskName</h3>
    <br />
    <p class="description"> @Model.Task.Description </p>    
</div>


<div>
    <h4>Affecté à: @Model.Task.Collab.Prenom @Model.Task.Collab.Nom (@Model.Task.Collab.Identifiant)</h4>
    @switch (Model.Statut)
    {
        case ClientListViewModel.StatutEnum.Admin:
        case ClientListViewModel.StatutEnum.SuperAdmin:
            <input type="button" onclick="location.href='@Url.Action("TaskModification", "Task", new { id = Model.Task.Id, projId = Model.Task.IdProj })'" value="Mettre à jour la tâche" />
            break;
        case ClientListViewModel.StatutEnum.ChefDeProjet:
            if (@Model.IsProjectManager)
            {
                <input type="button" onclick="location.href='@Url.Action("TaskModification", "Task", new { id = Model.Task.Id, projId = Model.Task.IdProj })'" value="Mettre à jour tâche" />
            }
            break;
        case ClientListViewModel.StatutEnum.Collaborateur:
            if (@Model.IsTaskResponsible)
            {
                <input type="button" onclick="location.href='@Url.Action("TaskModification", "Task", new { id = Model.Task.Id, projId = Model.Task.IdProj })'" value="Mettre à jour la tâche" />
            }
            break;
        default:
            break;
    }

</div>

<div>
    <h3>Informations d'avancement de la tâche</h3>
    <br />
    <p>Charge estimée: @Model.Task.ChargeEstimee</p>
    <p>Charge consommée: @Model.Task.ChargeConsommee</p>
    <p>Charge estimée restante: @Model.Task.ChargeEstimeeRestante </p>
    <p>Avancement: @Model.Task.Progres</p>
    <br />
</div>




