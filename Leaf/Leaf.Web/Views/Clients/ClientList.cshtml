@using NonFactors.Mvc.Grid;
@model ClientListViewModel
@{
    ViewData["Title"] = "Liste de mes clients";
}

<div>
    <h2 class="pageTitle" style="text-align:center"> Liste de mes clients </h2>
    <br />
    @switch (Model.Statut)
    {
        case ClientListViewModel.StatutEnum.Admin:
        case ClientListViewModel.StatutEnum.SuperAdmin:
        case ClientListViewModel.StatutEnum.ChefDeProjet:
            <input type="button" onclick="location.href='@Url.Action("ClientCreation", "Clients", null)'" value="Créer un client"/>
            break;
        case ClientListViewModel.StatutEnum.Collaborateur:
        default:
            break;
    }

    <br/>
    @(Html
        .Grid(Model.clients)
        .Build(columns =>
        {
            columns.Add(client => client.Nom).Titled("Client").RenderedAs(client => Html.ActionLink(client.Compagnie, "Profile", "Profile", new { client.Id })).Sortable(true);
        })
        .Filterable()
        .Sortable()
        .Pageable()
        .Empty("Aucun client à afficher")
    )

</div>