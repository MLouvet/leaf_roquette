@using NonFactors.Mvc.Grid;
@model ProfileViewModel
@{
    ViewData["Title"] = "Notifications";
}

<div>
    <h2 style="text-align:center">Notifications</h2>
    @*@({
        for (int i = 0; i < Model.notifications.Count; i++)
            Html.LabelFor(model => model.notifications[i]);
    })*@
</div>
<div>
    <h1>Tâches personnelles</h1>


    @(Html
                .Grid(Model.notifications)
                .Build(columns =>
                {
                    columns.Add(notif => notif.Message).Titled("Message").Sortable(true);
                    columns.Add(notif => notif.Horodatage).Titled("Date de réception").Sortable(true);
                    //columns.Add(notif => notif.IdProjetNavigation.Nom).Titled("Projet").Sortable(true).RenderedAs(notif=> (notif.IdProjet == null)? String.Empty : Html.ActionLink(notif.IdProjetNavigation.Nom, "", ""));
                    //columns.Add(notif => notif.IdTacheNavigation.Nom).Titled("Tâche").Sortable(true).RenderedAs(notif => (notif.IdTache == null)? String.Empty : notif.IdTacheNavigation.Nom);
                    columns.Add(notif => notif.Lue).Titled("Lue?").Sortable(true).RenderedAs(notif => (notif.Lue)? "Lue" : "Non-lue");
                })
                .Filterable()
                .Sortable()
                .Pageable()
                .Empty("Aucune notification à afficher")
    )

</div>