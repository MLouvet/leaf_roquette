@using NonFactors.Mvc.Grid;
@model ProjectsViewModel
@{
    ViewData["Title"] = "Mes Projets";
}

<div>
    <h2 style="text-align:center">Mes projets </h2>
    <br/>
    @switch (Model.Statut)
    {
        case ProjectsViewModel.StatutEnum.Admin:
        case ProjectsViewModel.StatutEnum.SuperAdmin:
        case ProjectsViewModel.StatutEnum.ChefDeProjet:
            <input type="button" onclick="location.href='@Url.Action("ProjectCreation", "Projects", null)'" value="Créer un projet" />
            break;
        case ProjectsViewModel.StatutEnum.Collaborateur:
        default:
            break;
    }
    <br/>
    <br/>
    @(Html
        .Grid(Model.projets)
        .Build(columns =>
        {
            columns.Add(project => project.Nom).Titled("Projet").RenderedAs(project => Html.ActionLink(project.Nom, "Project", "Projects", new { id = project.Id })).Sortable(true);
            columns.Add(project => project.ClientNavigation.Compagnie).Titled("Client").RenderedAs(project => Html.ActionLink(project.ClientNavigation.Compagnie, "Client", "Clients", new { project.ClientNavigation.Id })).Sortable(true);
            //columns.Add(project => project.ClientNavigation.Compagnie).Titled("Client").Sortable(true);
            columns.Add(project => project.ResponsableNavigation.Nom + " " + project.ResponsableNavigation.Prenom).Titled("Responsable").Sortable(true);
        })
        .Filterable()
        .Sortable()
        .Pageable()
        .Empty("Aucun projet à afficher")
    )

</div>


